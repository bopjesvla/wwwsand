<h1>Sand, the Elixir sandbox</h1>
<p>
    This is a language-level sandbox for Elixir. Only a subset of Elixir syntax
    can be used. More information can be found <a href="https://github.com/bopjesvla/sand">here</a>. Report bugs <a href="https://github.com/bopjesvla/sand/issues">here</a>. If you somehow manage to obtain remote access, please leave an explanation at /home/bob/rip.txt on my server, then shut it down. Thanks!
</p>

<form action="/" method="POST" id="code-form">
    <div id="code-contianer">
        <textarea cols="30" id="code" name="code" rows="10">
r factorial = fn
  1 -> 1
  n -> n * factorial.(n - 1)
end

factorial.(5)</textarea>
    </div>

    <input name="run" type="submit" value="Run"/>

</form>

<pre id="output"></pre>

<script>
 <%= {:safe, File.read! Path.join(:code.priv_dir(:wwwsand), "static/js/codemirror.min.js")} %>

 <%= {:safe, File.read! Path.join(:code.priv_dir(:wwwsand), "static/js/elixir.js")} %>

 var editor = CodeMirror.fromTextArea(document.getElementById('code'))

 var running = false

 const token = document.querySelector('meta[name="csrf-token"]').getAttribute('content')

 async function postData(url, data) {
     // Default options are marked with *
     const response = await fetch(url, {
         method: 'POST', // *GET, POST, PUT, DELETE, etc.
         cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
         credentials: 'same-origin', // include, *same-origin, omit
         headers: {
             'Content-Type': 'application/json',
             'X-CSRF-Token': token
         },
         body: JSON.stringify(data) // body data type must match "Content-Type" header
     });
     return response.json(); // parses JSON response into native JavaScript objects
 }

 document.getElementById('code-form').onsubmit = e => {
     var out = document.getElementById('output')
     var run = async e => {
         var res = await postData('/run', {code: editor.getValue()})
         if (res.ok)
             out.innerText = res.result
         else
             out.innerText = 'Execution failed. The error message:\n\n' + res.error
         out.scrollIntoView()
     }
     run()
     return false
 }
</script>
